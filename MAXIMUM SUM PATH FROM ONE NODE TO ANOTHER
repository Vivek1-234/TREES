//  PROGRAM TO FIND THE MAXIMUM SUM PATH OF A BINARY TREE ------->>>>>>>>>>>>>>>>>

//  let's see the code ---------->>>>>>>>



 #include"bits/stdc++.h"
 #include<math.h>
 using namespace std;

 struct node{

   int data ;
   node* left;
   node* right;

   node(int x){
   data = x ;
   right = NULL;
   left = NULL;

   }

 };
  int  maxpathsumutil(node* root , int &ans ){

       if(root==NULL){
           return 0 ; 
       }

       int left = maxpathsumutil(root->left , ans);
       int right = maxpathsumutil(root->right , ans);

       int nodemax = max(max(root->data , root->data + left + right ) ,
                         max(root->data + left , root->data + right ));
        ans = max(ans , nodemax);
        
     
        int singlepathsum = max(root->data , max(root->data + left , root->data + right ));
        cout<<singlepathsum<<endl;
        return  singlepathsum;
    
  }
  int maximumpathsum(node* root){
      int ans = INT_MIN;
      maxpathsumutil(root  , ans);
      return ans ;
  }

 int main(){

  node* root ;

  root = new node(1);
  root->left = new node(2);
  root->right = new node(3); 
  root->left->left = new node(4);  
  root->left->right = new node(5); 
   root->right->left = new node(6); 
  root->right->right = new node(7); 
   


   cout<<maximumpathsum(root);
 
  
 return 0;
  }    
