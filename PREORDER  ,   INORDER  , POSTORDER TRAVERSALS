// program to implement the preorder , inorder  and the postorder --------->>>>>>>>>


 /*    
           1
        /    \
       2     3
     /  \   / \
    4   5  6  7   

                 */



//  preorder ---->>>>>  first --->> ROOT , LEFTSUBTREE  , RIGHTSUBTREE ----->>>>>     1 , 2 , 4, 5 , 3 , 6 , 7,      
//  inorder ----->>>>>>   LEFTSUBTREE , ROOT , RIGHTSUBTREE ----->>>>>   4 , 2 , 5 , 1 , 6 , 3 , 7
//  postorder ------>>>>>>   LEFTSUBTREE  , RIGHTSUBTREE ,  ROOT----->>>>>   4 , 5, 2 , 6 , 7 , 3 , 1


// so , this is all about these ----->>>>>>>>>>>


#include"bits/stdc++.h"

using namespace std;

struct node {

  int data ;
  struct node* left ; 
  struct node* right ;



node(int val){
  data = val ; 
  left = NULL;
  right = NULL;

}

};

 void preorder(struct node* root){

   if(root==NULL){
     return ; 
   }
   cout<<root->data<<" ";
   preorder(root->left);
   preorder(root->right);

   
 }

  void inorder(struct node* root){

   if(root==NULL){
     return ; 
   }
  
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);

   
 }

  void postorder(struct node* root){

   if(root==NULL){
     return ; 
   }
   
   postorder(root->left);
   postorder(root->right);
   cout<<root->data<<" ";

   
 }



int main(){

 struct node* root = new node(1);
 root->left = new node(2);
 root->right = new node(3);
 root->left->left = new node(4);
 root->left->right = new node(5);
 root->right->left = new node(6);
 root->right->right= new node(7);
  
  cout<<"Preorder Traversals"<<endl;
  preorder(root);
  cout<<endl;
  
  cout<<"Inorder Traversals"<<endl;
  inorder(root);
  cout<<endl;

  
  cout<<"Postorder Traversals"<<endl;
  postorder(root);

return 0;
 }





   
