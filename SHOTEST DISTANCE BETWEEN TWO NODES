// program to find the shortest between two nodes in a tree ----->>>>>>>>>>>>>>>

// No let's see the code ------->>>>>>>>>>>>>>>>>>>



 #include"bits/stdc++.h"
 using namespace std;

 struct node{

   int data ;
   node* left;
   node* right;

   node(int x){
   data = x ;
   right = NULL;
   left = NULL;

   }

 };
 
 
 node* lowestcommonancestors(node* root , int n1 , int n2  ){
      
      if(root == NULL){
          return NULL ; 
      }

      if(root->data == n1 ||  root->data == n2){
          return root ;
      }
     node* llca = lowestcommonancestors(root->left , n1 ,  n2);
     node* rlca = lowestcommonancestors(root->right , n1 , n2);

     if(llca && rlca ){
         return root;
     }

     if(llca){

         return llca;
     }

     else{
         return rlca;
     }

     if(llca ==NULL  &&  rlca == NULL){
         return NULL ;
     }
 }

 int finddis(node* root , int k  , int dis  ){
        
        if(root == NULL){
            return -1 ; 
        }
    if(root->data == k){
            return dis ;
    }

      int left =  finddis(root->left , k , dis+1);
       if(left!= -1){
           return left;
       }

       return finddis(root->right , k , dis+1);
 }





 int shortestdistancebtnodes(node* root , int n1 , int n2 ){
      
      node* LCA = lowestcommonancestors(root , n1 , n2 );

      int d1 = finddis(LCA , n1 , 0 );
      int d2 = finddis(LCA , n2 , 0 );

      return d1+d2 ;
 }

 
 int main(){

  node* root ;

  root = new node(1);
  root->left = new node(2);
  root->right = new node(3); 
  root->left->left = new node(4); 
  root->left->right = new node(5); 
//   root->right->left = new node(6); 
//   root->right->right = new node(7); 

cout<<shortestdistancebtnodes(root , 4 , 5)<<endl;
  
 return 0;
  }    
